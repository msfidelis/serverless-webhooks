service: serverless-webhooks

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-east-1
  timeout: 30 #Default Lambda timeout 
  memorySize: 512 #Default Lambda Memory Size
  versionFunctions: false # No functions versioning 
  package:
    excludeDevDependencies: true
    exclude:
      - .git/**
      - .vscode/**
      - .test/**
  
  environment: #Global Environment variables
    WEBHOOKS_DYNAMO_TABLE: ${self:custom.dynamo-webhooks} # Reference to Custom Env
    WEBHOOKS_SQS_QUEUE: 'https://sqs.${self:provider.region}.amazonaws.com/#{AWS::AccountId}/${self:custom.sqs-webhooks}'
    REGION: ${self:custom.region}

  iamRoleStatements: # Permissions for all of your functions can be set here

  - Effect: Allow
    Action: # Gives permission to DynamoDB tables in a specific region
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:us-east-1:*:*"

  - Effect: Allow
    Action: # Gives permission to Lambda execution
      - lambda:InvokeFunction
      - lambda:InvokeAsync
    Resource: "*"

  - Effect: Allow
    Action: # Gives permission to SQS 
      - sqs:DeleteMessage
      - sqs:ReceiveMessage
      - sqs:SendMessage
    Resource: arn:aws:sqs:*:*:*

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  process: ${self:custom.prefix}-process
  config: ${self:custom.prefix}-config
  dynamo-webhooks: ${self:custom.prefix}-webhooks
  sns-logs: ${self:custom.prefix}-trigger-logs
  sqs-webhooks: ${self:custom.prefix}-messages-logs

plugins:
  - serverless-pseudo-parameters

functions:

  # API Endpoints
  
  webhooks-register:
    handler: modules/webhooks/endpoints/create.handler
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: webhooks
          method: POST

  webhooks-cancel:
    handler: modules/webhooks/endpoints/cancel.handler
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: webhooks/{hashkey}
          method: DELETE          

  webhooks-detail:
    handler: modules/webhooks/endpoints/detail.handler
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: webhooks/{hashkey}
          method: GET
  
  # Workers
  webhooks-sqs:
    handler: modules/webhooks/functions/sqs-worker.worker
    memorySize: 256
    timeout: 60
    environment:
      WEBHOOKS_MESSAGES_TO_CONSUME: "10"
      WEBHOOKS_CONSUME_INTERVAL: "500"
      WEBHOOKS_HOOKS_EXECUTOR: "${self:service}-${self:custom.stage}-webhooks-executor"
    events:
      - schedule: 
          rate: rate(1 minute) 
          enabled: false
  
  webhooks-executor:
    handler: modules/webhooks/functions/execution-worker.worker
    memorySize: 512
    timeout: 60

# Infrastrucure - Cloud Formation
resources:  # CloudFormation template syntax

  Resources:

    # Dynamo table
    WebhooksRegister:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamo-webhooks}
        AttributeDefinitions:
          - AttributeName: hashkey
            AttributeType: S
        KeySchema:
          - AttributeName: hashkey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    # SQS Queue
    WebhooksQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs-webhooks}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 120
